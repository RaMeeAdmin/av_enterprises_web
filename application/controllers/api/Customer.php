<?php
/*
Generated by Manuigniter v2.0
www.manuigniter.com
 */
use Restserver\Libraries\REST_Controller;

defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . '/libraries/REST_Controller.php';
require APPPATH . 'libraries/Format.php';
class Customer extends REST_Controller {
	function __construct() {
		parent::__construct();
		$this->load->model('Customer_model');
		$this->load->model('State_model');
	}
	/*
		* Listing of customer
	*/
	function get_all_post() {
		try {
			$data['customer'] = $this->Customer_model->get_all_customer();
			if ($data['customer'] && $data['customer'] != null) {

				$response = array(
					'success' => true,
					'message' => 'get all data Succesfully',
					'data' => $data,
				);
				$this->response($response, REST_Controller::HTTP_OK);
			} else {
				$response = array(
					'success' => false,
					'message' => 'Detail is not found',
				);
				$this->response($response, REST_Controller::HTTP_OK);
			}
		} catch (Exception $ex) {
			$response = array(
				'success' => false,
				'message' => 'Detail is not found',
			);
			$this->response($response, REST_Controller::HTTP_OK);
		}
	}
	/*
		  * Adding a new customer
	*/
	function getcustomer_post() {
		extract($_POST);
		$data = $this->Customer_model->get_customer($id);
		if (count($data) != '0') {
			$response = array(
				'success' => true,
				'message' => 'Record Not Found',
				'data' => $data,
			);
			$this->response($response, REST_Controller::HTTP_OK);
		} else {
			$response = array(
				'success' => flase,
				'message' => 'Record Not Found',
				'data' => $id,
			);
			$this->response($response, REST_Controller::HTTP_OK);
		}
	}

	function get_state_post() {
		$data = $this->State_model->get_all_state();
		if ($data != '') {
			$response = array(
				'success' => true,
				'message' => 'Record found',
				'data' => $data,
			);
			$this->response($response, REST_Controller::HTTP_OK);
		} else {
			$response = array(
				'success' => false,
				'message' => 'Not Record found',
				'data' => '',
			);
			$this->response($response, REST_Controller::HTTP_OK);
		}
	}

	function addnew_post() {
		try {
			$params = array(
				'name' => $this->input->post('name'),
				'phone' => $this->input->post('phone'),
				'email' => $this->input->post('email'),
				'address' => $this->input->post('address'),
				'state_id' => $this->input->post('state'),
				'contact_person_name' => $this->input->post('contact_person_name'),
				'contact_person_contact_number' => $this->input->post('contact_person_contact_number'),
				'gstno' => $this->input->post('gstn_uin'),
				'credit_days' => $this->input->post('credit_days'),
				'isActive' => 'Y',
				'company_id' => '1',
				'created_at' => date('Y-m-d H:m:s'),
			);
			$this->load->library('upload');
			$this->load->library('form_validation');
			if (isset($_POST) && count($_POST) > 0) {
				$id = $this->Customer_model->add_customer($params);
				$data['customer'] = $this->Customer_model->get_customer($id);
				$response = array(
					'success' => true,
					'message' => 'Succesfully Added',
					'data' => $data,
				);
				$this->response($response, REST_Controller::HTTP_OK);
			} else {
				$response = array(
					'success' => false,
					'message' => 'Not Added try again',
					'data' => '',
				);
				$this->response($response, REST_Controller::HTTP_OK);
			}
		} catch (Exception $ex) {
			$response = array(
				'success' => false,
				'message' => 'Not Added try again',
				'data' => '',
			);
			$this->response($response, REST_Controller::HTTP_OK);
		}
	}
	/*
		  * Editing a customer
	*/
	function edit_post($id) {
		try {
			$data['customer'] = $this->Customer_model->get_customer($id);
			$this->load->library('upload');
			$this->load->library('form_validation');
			if (isset($data['customer']['id'])) {
				$params = array(
					'name' => $this->input->post('name'),
					'phone' => $this->input->post('phone'),
					'email' => $this->input->post('email'),
					'address' => $this->input->post('address'),
					'state_id' => $this->input->post('state'),
					'contact_person_name' => $this->input->post('contact_person_name'),
					'contact_person_contact_number' => $this->input->post('contact_person_contact_number'),
					'gstno' => $this->input->post('gstn_uin'),
					'credit_days' => $this->input->post('credit_days'),
					'isActive' => 'Y',
					'company_id' => '1',
					'updated_at' => date('Y-m-d H:m:s'),
				);
				if (isset($_POST) && count($_POST) > 0) {
					$this->Customer_model->update_customer($id, $params);
					$response = array(
						'success' => true,
						'message' => 'Succesfully Updated',
						'data' => $id,
					);
					$this->response($response, REST_Controller::HTTP_OK);
				} else {
					$response = array(
						'success' => false,
						'message' => 'Not Updated Try again',
						'data' => $id,
					);
					$this->response($response, REST_Controller::HTTP_OK);
				}
			}
		} catch (Exception $ex) {
			throw new Exception('Customer controller_name : Error in edit_post function - ' . $ex);
		}
	}
	function empList_post() {
		$postData = $this->input->post();
		$data = $this->Customer_model->getcustomer($postData);
		echo json_encode($data);
	}
/*
 * Deleting customer
 */
	function remove_post($id) {
		try {
			$customer = $this->Customer_model->get_customer($id);

			if (isset($customer['id'])) {
				$this->Customer_model->delete_customer($id);
				$response = array(
					'success' => true,
					'message' => 'Succesfully Removed',
					'data' => $id,
				);
				$this->response($response, REST_Controller::HTTP_OK);
			} else {
				$response = array(
					'success' => false,
					'message' => 'Not Updated Try again',
					'data' => $id,
				);
			}

			$this->response($response, REST_Controller::HTTP_OK);
		} catch (Exception $ex) {
			throw new Exception('Customer controller_name : Error in remove_post function - ' . $ex);
		}
	}
	function get_customer_details_post() {

		$data = $this->db->query("select * from customer")->result_array();
		if ($data != '') {
			$response = array(
				'success' => true,
				'message' => 'Record found',
				'data' => $data,
			);
			$this->response($response, REST_Controller::HTTP_OK);
		} else {
			$response = array(
				'success' => false,
				'message' => 'Not Record found',
				'data' => '',
			);
			$this->response($response, REST_Controller::HTTP_OK);
		}
	}
}
