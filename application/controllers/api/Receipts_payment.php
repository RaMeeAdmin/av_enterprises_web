<?php 
/*
    Generated by Manuigniter v2.0 
    www.manuigniter.com
*/
use Restserver\Libraries\REST_Controller;
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . '/libraries/REST_Controller.php';
require APPPATH . 'libraries/Format.php';
class Receipts_payment extends REST_Controller{
 function __construct()
 {
       parent::__construct();
      $this->load->model('Receipts_payment_model');
 } 
 /*
* Listing of receipts_payment
 */
public function get_all_post()
{
  try{
  $data['receipts_payment'] = $this->Receipts_payment_model->get_all_receipts_payment();
     if($data['receipts_payment'] && $data['receipts_payment']!=null){
       $receipts_payment_ar = array();
       foreach($data['receipts_payment'] as $r)
       {
       $r_ar = array();
       $r_ar['id'] = $r['id'];
       $r_ar['date'] = $r['date'];
       $r_ar['voucher_no'] = $r['voucher_no'];
       $r_ar['payment_type'] = $r['payment_type'];
       $r_ar['bank_id'] = $r['bank_id'];
       $r_ar['user_type'] = $r['user_type'];
       $r_ar['customer_id'] = $r['customer_id'];
       $r_ar['supplier_id'] = $r['supplier_id'];
       $r_ar['vehicle_id'] = $r['vehicle_id'];
       $r_ar['supervisor_id'] = $r['supervisor_id'];
       $r_ar['pump_id'] = $r['pump_id'];
       $r_ar['remark'] = $r['remark'];
       $r_ar['amount'] = $r['amount'];
       $r_ar['blty_or_dc_no'] = $r['blty_or_dc_no'];
       $r_ar['company_id'] = $r['company_id'];
       $r_ar['created_at'] = $r['created_at'];
       $r_ar['updated_at'] = $r['updated_at'];
       $receipts_payment_ar[] = $r_ar;
       }
       $response = array(
       'status' => 200,
       'message' => 'get all data Succesfully',
       'data' => $receipts_payment_ar,
       );
       $this->response($response, REST_Controller::HTTP_OK);
     }
     else{
       $response = array(
      'status' => 400,
      'message' => 'Detail is not found'
        );
       $this->response($response, REST_Controller::HTTP_OK); 
        }
       } catch (Exception $ex) {
             throw new Exception('Receipts_payment controller_name : Error in get_all_post function - ' . $ex);
        }  
}
 /*
  * Adding a new receipts_payment
  */
 function addnew_post()
 {  
  try{
      $params = array(
       'date'=> $this->input->post('date'),
       'voucher_no'=> $this->input->post('voucher_no'),
       'payment_type'=> $this->input->post('payment_type'),
       'bank_id'=> $this->input->post('bank_id'),
       'user_type'=> $this->input->post('user_type'),
       'customer_id'=> $this->input->post('customer_id'),
       'supplier_id'=> $this->input->post('supplier_id'),
       'vehicle_id'=> $this->input->post('vehicle_id'),
       'supervisor_id'=> $this->input->post('supervisor_id'),
       'pump_id'=> $this->input->post('pump_id'),
       'remark'=> $this->input->post('remark'),
       'amount'=> $this->input->post('amount'),
       'blty_or_dc_no'=> $this->input->post('blty_or_dc_no'),
       'company_id'=> $this->input->post('company_id'),
       'created_at'=> $this->input->post('created_at'),
       'updated_at'=> $this->input->post('updated_at'),
        );
       $this->load->library('upload');
       $this->load->library('form_validation');
       if(isset($_POST) && count($_POST) > 0)     
        {  
            $id= $this->Receipts_payment_model->add_receipts_payment($params);
   $data['receipts_payment'] = $this->Receipts_payment_model->get_receipts_payment($id);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Added',
            'data' => $data
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
        else
        { 
           $response = array(
            'status' => 400,
            'message' => 'Not Added try again',
            'data' => ''
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
       } catch (Exception $ex) {
             throw new Exception('Receipts_payment controller_name : Error in new receipts_payment function - ' . $ex);
       }  
 }  
  /*
  * Editing a receipts_payment
 */
  function edit_post($id)
 {   
  try{
   $data['receipts_payment'] = $this->Receipts_payment_model->get_receipts_payment($id);
       $this->load->library('upload');
       $this->load->library('form_validation');
     if(isset($data['receipts_payment']['id']))
      {
        $params = array(
           'date'=> $this->input->post('date'),
           'voucher_no'=> $this->input->post('voucher_no'),
           'payment_type'=> $this->input->post('payment_type'),
           'bank_id'=> $this->input->post('bank_id'),
           'user_type'=> $this->input->post('user_type'),
           'customer_id'=> $this->input->post('customer_id'),
           'supplier_id'=> $this->input->post('supplier_id'),
           'vehicle_id'=> $this->input->post('vehicle_id'),
           'supervisor_id'=> $this->input->post('supervisor_id'),
           'pump_id'=> $this->input->post('pump_id'),
           'remark'=> $this->input->post('remark'),
           'amount'=> $this->input->post('amount'),
           'blty_or_dc_no'=> $this->input->post('blty_or_dc_no'),
           'company_id'=> $this->input->post('company_id'),
           'created_at'=> $this->input->post('created_at'),
           'updated_at'=> $this->input->post('updated_at'),
        );
          if(isset($_POST) && count($_POST) > 0)     
           {  
           $this->Receipts_payment_model->update_receipts_payment($id,$params);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Updated',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
           }
           else
          {
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
          }
  }
       } catch (Exception $ex) {
             throw new Exception('Receipts_payment controller_name : Error in edit_post function - ' . $ex);
        }  
} 
/*
  * Deleting receipts_payment
  */
  function remove_post($id)
   {
  try{
      $receipts_payment = $this->Receipts_payment_model->get_receipts_payment($id);
  // check if the receipts_payment exists before trying to delete it
       if(isset($receipts_payment['id']))
       {
         $this->Receipts_payment_model->delete_receipts_payment($id);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Removed',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       }
       else
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       } catch (Exception $ex) {
             throw new Exception('Receipts_payment controller_name : Error in remove_post function - ' . $ex);
        }  
  }

  function get_customer_outstanding_post(){
    extract($_POST);
    $data = $this->db->query("select * from bagasse_sale where customer_id = '$id'")->row_array();
    $so_id= $data['id'];
    $transport_data = $this->db->query("select sum(chalan_amount) as total from transport_details where so_id = '$so_id' and delivery_proof != '' ")->row_array();
    
    $total=$transport_data['total'];

    if (count($transport_data) != '0') {
      $response = array(
        'success' => true,
        'message' => 'Record Found',
        'data' => $total,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    } else {
      $response = array(
        'success' => flase,
        'message' => 'Record Not Found',
        'data' => $id,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    }
  }
 
 function get_supplier_outstanding_post(){
    extract($_POST);
     $transport_data = $this->db->query("select sum(chalan_amount) as total from transport_details where supply_to_id = '$id' and delivery_proof != '' ")->row_array();
    $total=$transport_data['total'];
    if($total == ''){
      $total='0.00';
    }
    if (count($transport_data) != '0') {
      $response = array(
        'success' => true,
        'message' => 'Record Found',
        'data' => $total,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    } else {
      $response = array(
        'success' => flase,
        'message' => 'Record Not Found',
        'data' => $id,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    }
  }

  function get_vehicle_outstanding_post(){
    extract($_POST);
    //print_r($_POST);exit();
     $transport_data = $this->db->query("select sum(delivery_amount) as total from transport_details where vehicle_id = '$id' and delivery_proof != '' ")->row_array();
     $transport_data1 = $this->db->query("select * from transport_details where vehicle_id = '$id' and delivery_proof != '' ")->result_array();
    $total['sum']=$transport_data['total'];
    $total['all']=$transport_data1;
    if($total == ''){
      $total='0.00';
    }
    if (count($transport_data) != '0') {
      $response = array(
        'success' => true,
        'message' => 'Record  Found',
        'data' => $total,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    } else {
      $response = array(
        'success' => flase,
        'message' => 'Record Not Found',
        'data' => $id,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    }

  }
  function get_pump_outstanding_post(){
    extract($_POST);
       $data = $this->db->query("select * from diesel_payment where pump_id = '$id'")->row_array();
    $id= $data['transporter_id'];
     $transport_data = $this->db->query("select sum(diesel_advance) as total from transport_details where id = '$id' and delivery_proof != '' ")->row_array();
    $total=$transport_data['total'];
    if($total == ''){
      $total='0.00';
    }
    if (count($transport_data) != '0') {
      $response = array(
        'success' => true,
        'message' => 'Record Not Found',
        'data' => $total,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    } else {
      $response = array(
        'success' => flase,
        'message' => 'Record Not Found',
        'data' => $id,
      );
      $this->response($response, REST_Controller::HTTP_OK);
    }

  }
 }
