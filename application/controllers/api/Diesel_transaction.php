<?php 
/*
    Generated by Manuigniter v2.0 
    www.manuigniter.com
*/
use Restserver\Libraries\REST_Controller;
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . '/libraries/REST_Controller.php';
require APPPATH . 'libraries/Format.php';
class Diesel_transaction extends REST_Controller{
 function __construct()
 {
       parent::__construct();
      $this->load->model('Diesel_transaction_model');
 } 
 /*
* Listing of diesel_transaction
 */
public function get_all_post()
{
  try{
  $data['diesel_transaction'] = $this->Diesel_transaction_model->get_all_diesel_transaction();
     if($data['diesel_transaction'] && $data['diesel_transaction']!=null){
       $diesel_transaction_ar = array();
       foreach($data['diesel_transaction'] as $d)
       {
       $d_ar = array();
       $d_ar['id'] = $d['id'];
       $d_ar['transport_id'] = $d['transport_id'];
       $d_ar['pumps_id'] = $d['pumps_id'];
       $d_ar['diesel_qty'] = $d['diesel_qty'];
       $d_ar['diesel_rate'] = $d['diesel_rate'];
       $d_ar['diesel_amount'] = $d['diesel_amount'];
       $d_ar['created_at'] = $d['created_at'];
       $d_ar['updated_at'] = $d['updated_at'];
       $diesel_transaction_ar[] = $d_ar;
       }
       $response = array(
       'status' => 200,
       'message' => 'get all data Succesfully',
       'data' => $diesel_transaction_ar,
       );
       $this->response($response, REST_Controller::HTTP_OK);
     }
     else{
       $response = array(
      'status' => 400,
      'message' => 'Detail is not found'
        );
       $this->response($response, REST_Controller::HTTP_OK); 
        }
       } catch (Exception $ex) {
             throw new Exception('Diesel_transaction controller_name : Error in get_all_post function - ' . $ex);
        }  
}
 /*
  * Adding a new diesel_transaction
  */
 function addnew_post()
 {  
  try{
      $params = array(
       'transport_id'=> $this->input->post('transport_id'),
       'pumps_id'=> $this->input->post('pumps_id'),
       'diesel_qty'=> $this->input->post('diesel_qty'),
       'diesel_rate'=> $this->input->post('diesel_rate'),
       'diesel_amount'=> $this->input->post('diesel_amount'),
       'created_at'=> $this->input->post('created_at'),
       'updated_at'=> $this->input->post('updated_at'),
        );
       $this->load->library('upload');
       $this->load->library('form_validation');
       if(isset($_POST) && count($_POST) > 0)     
        {  
            $id= $this->Diesel_transaction_model->add_diesel_transaction($params);
   $data['diesel_transaction'] = $this->Diesel_transaction_model->get_diesel_transaction($id);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Added',
            'data' => $data
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
        else
        { 
           $response = array(
            'status' => 400,
            'message' => 'Not Added try again',
            'data' => ''
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
       } catch (Exception $ex) {
             throw new Exception('Diesel_transaction controller_name : Error in new diesel_transaction function - ' . $ex);
       }  
 }  
  /*
  * Editing a diesel_transaction
 */
  function edit_post($id)
 {   
  try{
   $data['diesel_transaction'] = $this->Diesel_transaction_model->get_diesel_transaction($id);
       $this->load->library('upload');
       $this->load->library('form_validation');
     if(isset($data['diesel_transaction']['id']))
      {
        $params = array(
           'transport_id'=> $this->input->post('transport_id'),
           'pumps_id'=> $this->input->post('pumps_id'),
           'diesel_qty'=> $this->input->post('diesel_qty'),
           'diesel_rate'=> $this->input->post('diesel_rate'),
           'diesel_amount'=> $this->input->post('diesel_amount'),
           'created_at'=> $this->input->post('created_at'),
           'updated_at'=> $this->input->post('updated_at'),
        );
          if(isset($_POST) && count($_POST) > 0)     
           {  
           $this->Diesel_transaction_model->update_diesel_transaction($id,$params);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Updated',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
           }
           else
          {
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
          }
  }
       } catch (Exception $ex) {
             throw new Exception('Diesel_transaction controller_name : Error in edit_post function - ' . $ex);
        }  
} 
/*
  * Deleting diesel_transaction
  */
  function remove_post($id)
   {
  try{
      $diesel_transaction = $this->Diesel_transaction_model->get_diesel_transaction($id);
  // check if the diesel_transaction exists before trying to delete it
       if(isset($diesel_transaction['id']))
       {
         $this->Diesel_transaction_model->delete_diesel_transaction($id);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Removed',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       }
       else
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       } catch (Exception $ex) {
             throw new Exception('Diesel_transaction controller_name : Error in remove_post function - ' . $ex);
        }  
  }
 }
